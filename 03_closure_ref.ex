# closure : once you attach a variable to a function , it's value does not get changed

outside_var = 10
IO.puts(outside_var)    # prints 10

lamda_closure = fn -> IO.puts outside_var end

# closure : test
lamda_closure.()        # prints 10
outside_var = 2
IO.puts(outside_var)    # prints 2
lamda_closure.()        # prints 10
IO.puts(outside_var)    # prints 2

# ref : reference is something unique generated by the beam in it's runtime instance [from when it got started]
Kernel.make_ref()
